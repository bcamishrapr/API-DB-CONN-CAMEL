<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	   xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
	   xsi:schemaLocation=" 
	                        http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd   
	                        http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd
				http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd" >

				
				<cm:property-placeholder id="cfg2" persistent-id="apidb" update-strategy="reload">
					<cm:default-properties>
						<cm:property name="host" value="localhost"/>
						<cm:property name="apiport" value="8080"/>
					</cm:default-properties>
				</cm:property-placeholder>
				
	   <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://192.168.122.128/prasoon" />
		<property name="username" value="root" />
		<property name="password" value="redhat" />
	</bean>
<!--	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="com.microsoft.sqlserver.jdbc.SQLServerDriver"/>
        <property name="url" value="jdbc:sqlserver://localhost:3306;DatabaseName=testing"/>
        <property name="username" value="root"/>
        <property name="password" value="redhat@123"/>
    </bean> -->

     
     <camelContext id="api-db" xmlns="http://camel.apache.org/schema/blueprint" streamCache="true">
		    <dataFormats>
			    <json id="jsonOrder" library="Jackson"/>
		    </dataFormats>

	    <route id="apidb">
		    <from uri="restlet:http://{{host}}:{{apiport}}/api/getfirstdetails?restletMethod=POST"/>
		    
		    <doTry>
		    

	   <unmarshal ref="jsonOrder"/>

          <log id="_log2" message="The Hit recieved for order ${date:now:yyyy-MM-dd HH:mm:ss} URL :: ${header.CamelHttpUri} body:: ${body}"/>
	<!--    <choice>
	  <when> <simple>${body} == []</simple>
	  <log message="Body is null"/>
	  </when>
	  </choice> -->
	 
	  <setHeader headerName="Record"><simple>${body[FirstName]}</simple></setHeader>
	  
	  <setHeader headerName="Recorde"><simple>${body[LastName]}</simple></setHeader> 
	  <setHeader headerName="Recordr"><simple>${body[EmployeeID]}</simple></setHeader> 
	  <setBody><simple>select * from Employee where FirstName = '${body[FirstName]}' or  LastName = '${body[LastName]}' or EmployeeID = '${body[EmployeeID]}'</simple></setBody>
	   
	  
	  <to id="_to4" uri="jdbc:dataSource"/>

	  <log message="Details are as  ${body}"/>
	  <!--<removeHeaders pattern="*" excludePattern="CamelFileName"/>-->
	  <marshal ref="jsonOrder"/>
	   <removeHeaders pattern="*"/>
	  
	    <setHeader headerName="Content-Type" > <simple> application/json</simple></setHeader>
	    <setHeader headerName="CamelRestletResponse"><simple>${body}</simple></setHeader>
    <doCatch>
   <exception>java.lang.Exception</exception>
   <log message="Service Exception ${exception.message} at ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS}****"/>
    <!--  <setHeader headerName="ExcpMsg"><simple>${exception.message}</simple></setHeader>-->
    <setHeader headerName="Exception">  <simple> {"message":"Body Can't Be Null"} </simple>  </setHeader>
    <setHeader headerName="Content-Type"><simple>application/json</simple></setHeader>
    <setBody><simple> ${header.Exception}</simple> </setBody>
	          <!-- <setBody><simple>{"error":"${exception.message}"}</simple> </setBody> -->
	          <marshal ref="jsonOrder"/>
	          <setHeader headerName="CamelRestletResponse"><simple>${body}</simple></setHeader>
	          
 	</doCatch> 

   	                  <doCatch>
                         	<exception>java.lang.NullPointerException</exception>
	                 	<log message="Database  exception ${exception.message} at ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS}"/>
		                <setHeader headerName="Exception"><simple>{"message":"Error in Database"}</simple></setHeader>
                            	<setHeader headerName="Content-Type"><simple>application/json</simple></setHeader>
				<setBody><simple>{"error":"The TCP/IP connection of db has been failed"}</simple></setBody>
				<marshal ref="jsonOrder"/>
                            	<setHeader headerName="CamelRestletResponse"><simple>${body}</simple></setHeader>
                    	</doCatch> 
 	
 	</doTry>
  	
 
			 
        </route>
    </camelContext>
</blueprint>
